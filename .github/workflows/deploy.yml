name: Deploy to Render

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run smoke tests
      run: |
        python src/smoke_test.py
      env:
        FLASK_ENV: testing
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: gabarita-ai-frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./gabarita-ai-frontend
      run: npm ci
    
    - name: Run linter
      working-directory: ./gabarita-ai-frontend
      run: npm run lint
    
    - name: Run tests
      working-directory: ./gabarita-ai-frontend
      run: npm run test
    
    - name: Build application
      working-directory: ./gabarita-ai-frontend
      run: npm run build
      env:
        NEXT_PUBLIC_API_URL: https://gabarita-ai-backend.onrender.com
        NEXT_PUBLIC_FRONTEND_URL: https://gabarita-ai-frontend.onrender.com

  deploy:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy Backend to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
    
    - name: Deploy Frontend to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}